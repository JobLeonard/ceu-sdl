#ifndef ALL

#include "sdl.ceu"

input void SDL_QUIT;
input void SDL_REDRAW;
input int  SDL_DT;

var _SDL_Window[] win;
finalize
    win = _SDL_CreateWindow("Birds - 08 (pools-undounded)", 200,200, 640,480, 0);
with
    _SDL_DestroyWindow(win);
end

var _SDL_Renderer[] ren;
finalize
    ren = _SDL_CreateRenderer(win, -1, 0);
with
    _SDL_DestroyRenderer(ren);
end

#else

_SDL_SetWindowTitle(win, "Birds - 08 (pools-unbounded)");

#endif

native do
    SDL_Texture* TEX_UP, *TEX_DOWN;
end
    finalize
        _TEX_UP = _IMG_LoadTexture(ren, "strangeloop-14/clumsy_up.png");
    with
        _SDL_DestroyTexture(_TEX_UP);
    end
    finalize
        _TEX_DOWN = _IMG_LoadTexture(ren, "strangeloop-14/clumsy_down.png");
    with
        _SDL_DestroyTexture(_TEX_DOWN);
    end

#define PI 3.14

class Bird with
    var _SDL_Renderer[] ren;
    var _SDL_Rect r;
    var int speed;
do
    this.r.x = 20;
    this.r.w = 50;
    this.r.h = 45;

    var _SDL_Texture[] tex = _TEX_DOWN;

    par/or do
        var float sin = 0;
        var int y = r.y;
        var int dt;
        var float x = r.x;
        every dt in SDL_DT do
            var float v = dt*speed;
            x = x + v/1000;
            r.x = x;
            r.y = y + speed/5*_sin(sin);

            sin = sin + PI*v/100000;
            if ((int)((sin+PI/2)/PI)) % 2 == 0 then
                tex = _TEX_DOWN;
            else
                tex = _TEX_UP;
            end

            if r.x > 580 then
                break;
            end
        end
    with
        every SDL_REDRAW do
            _SDL_RenderCopy(ren, tex, null, &r);
        end
    end
end

par/or do
    every SDL_REDRAW do
        _SDL_SetRenderDrawColor(ren, 0x00,0x00,0x00, 0);
        _SDL_RenderFillRect(ren, null);
    end
with
    pool Bird[] birds;
    every 1s do
        spawn Bird in birds with
            this.ren   = ren;
            this.r.y   =  20 + _rand()%350;
            this.speed = 100 + _rand()%100;
        end;
    end
with
    every SDL_REDRAW do
        _SDL_RenderPresent(ren);
    end
with
    await SDL_QUIT;
end

escape 0;
